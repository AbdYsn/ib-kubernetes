// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import http "github.com/Mellanox/ib-kubernetes/pkg/drivers/http"
import mock "github.com/stretchr/testify/mock"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Get provides a mock function with given fields: url, expectedStatusCode
func (_m *Client) Get(url string, expectedStatusCode int) ([]byte, error) {
	ret := _m.Called(url, expectedStatusCode)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, int) []byte); ok {
		r0 = rf(url, expectedStatusCode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(url, expectedStatusCode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: url, expectedStatusCode, body
func (_m *Client) Post(url string, expectedStatusCode int, body []byte) ([]byte, error) {
	ret := _m.Called(url, expectedStatusCode, body)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, int, []byte) []byte); ok {
		r0 = rf(url, expectedStatusCode, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int, []byte) error); ok {
		r1 = rf(url, expectedStatusCode, body)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetBasicAuth provides a mock function with given fields: auth
func (_m *Client) SetBasicAuth(auth *http.BasicAuth) {
	_m.Called(auth)
}
